import { iLexPosition, iRule, iSymbolTable, iToken } from '../interfaces/interfaces';
export declare const _COMPONENTS_DIRECTORY: string;
export declare const COMPONENT_FILE_PATH: string;
export declare const RENDERED_FILE_PATH: string;
export declare const SELF_CLOSING_TAG_TYPES: Array<string>;
export declare const CLOSING_EXEMPT_TAGS: Array<string>;
export declare const BLANK_RULE: iRule;
export declare const HTML_RULE: iRule;
export declare const INJECT_RULE: iRule;
export declare const CONTROL_RULE: iRule;
export declare const CONTROL_IF_RULE: iRule;
export declare const CONTROL_ELSEIF_RULE: iRule;
export declare const CONTROL_ELSE_RULE: iRule;
export declare const CONTROL_FOR_RULE: iRule;
export declare const CONTROL_END_RULE: iRule;
export declare const CONTROL_COMPONENT_RULE: iRule;
export declare const CONTROL_PROPS_RULE: iRule;
export declare const BLANK_TOKEN: iToken;
export declare const BAD_TOKEN: iToken;
export declare const EOF_TOKEN: iToken;
export declare const INVALID_POSITION: iLexPosition;
export declare const INVALID_INPUT_TOKEN: iToken;
export declare const INTERMEDIATE_CONTENT: string;
export declare const WHITESPACE_CONTENT: string;
export declare const INVALID_TOKEN_NAME: string;
export declare const FILE_EXTENSION_GGD: string;
export declare const FILE_EXTENSION_HTML: string;
export declare const ALGEBRAIC_AND: string;
export declare const ALGEBRAIC_OR: string;
export declare const ALGEBRAIC_NOT: string;
export declare const CONTROL_FOR_ALIAS_INDEX: number;
export declare const CONTROL_FOR_PREPOSITION_INDEX: number;
export declare const CONTROL_FOR_SYMBOL_INDEX: number;
export declare const FN_CLONE_TOKEN: (t: iToken) => iToken;
export declare const FN_MAKE_PATH_ABSOLUTE: (absoluteBasePath: string, path: string, relativeTo?: string) => string;
export declare const FN_GET_PROPS_ARRAY: (propsToken: iToken) => string[];
export declare const _DEV_SYMBOLTABLE: iSymbolTable;
